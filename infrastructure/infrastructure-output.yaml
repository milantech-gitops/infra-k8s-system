apiVersion: v1
kind: Namespace
metadata:
  name: certmanager
---
apiVersion: v1
kind: Namespace
metadata:
  name: infra-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: kapp
---
apiVersion: v1
kind: Namespace
metadata:
  name: kubeview
---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
apiVersion: v1
kind: Namespace
metadata:
  name: vault-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apps.kappctrl.k14s.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.friendlyDescription
    description: Friendly description
    name: Description
    type: string
  - JSONPath: .status.deploy.startedAt
    description: Last time app started being deployed. Does not mean anything was changed.
    name: Since-Deploy
    type: date
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created.
      It is not guaranteed to be set in happens-before order across separate operations.
      Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      Populated by the system. Read-only. Null for lists.
      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
  group: kappctrl.k14s.io
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  subresources:
    status: {}
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kapp-controller-sa
  namespace: kapp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kapp-controller-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - secrets
  - configmaps
  verbs:
  - get
- apiGroups:
  - kappctrl.k14s.io
  resources:
  - apps
  - apps/status
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kapp-controller-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kapp-controller-cluster-role
subjects:
- kind: ServiceAccount
  name: kapp-controller-sa
  namespace: kapp
---
apiVersion: v1
data:
  values.yaml: |-
    ---
    # Default values for kubeview-values
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # The namespace where the operator watches for vault CRD objects, if not defined
    # all namespaces are watched
    installCRDs: true
    extraArgs:
      - --cluster-resource-namespace=certmanager
kind: ConfigMap
metadata:
  name: certmanager-config-values-8g9c724k4m
  namespace: certmanager
---
apiVersion: v1
data:
  values.yaml: |-
    ---
    # Default values for kubeview-values
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # The namespace where the operator watches for vault CRD objects, if not defined
    # all namespaces are watched
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: "letsencrypt-staging"
        traefik.ingress.kubernetes.io/auth-type: basic
        traefik.ingress.kubernetes.io/auth-secret: kubeview-auth
        traefik.ingress.kubernetes.io/frontend-entry-points: "https"
      hosts:
        - host: kubeview.milantech.live
          paths: [ "/" ]
      tls:
        - secretName: kubeview-milantech-view-tls
          hosts:
            - kubeview.milantech.live
kind: ConfigMap
metadata:
  name: kubeview-config-values-g6m46t6cck
  namespace: kubeview
---
apiVersion: v1
data:
  values.yaml: |
    ---
    # Default values for kubeview-values
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # The namespace where the operator watches for vault CRD objects, if not defined
    # all namespaces are watched


    ## configInline specifies MetalLB's configuration directly, in yaml
    ## format. When configInline is used, Helm manages MetalLB's
    ## configuration ConfigMap as part of the release, and
    ## existingConfigMap is ignored.
    ## Refer to https://metallb.universe.tf/configuration/ for
    ## available options.
    #
    configInline:
    #BGP config
      # peers:
      # - peer-address: 10.0.0.1
      #   peer-asn: 64512
      #   my-asn: 64512
      # address-pools:
      # - name: default
      #   protocol: bgp
      #   addresses:
      #   - 198.51.100.0/24
      address-pools:
      - name: default
        protocol: layer2
        addresses:
        - 172.30.0.150-172.30.0.200

    ## RBAC creation for controller and speaker
    ##
    rbac:
      ## create specifies whether to install and use RBAC rules.
      ##
      create: true

    ## PSP creation for controller and speaker
    ##
    psp:
      ## create specifies whether to install Pod Security Policies.
      ##
      create: true
kind: ConfigMap
metadata:
  name: metallb-config-values-59k87bc8mk
  namespace: metallb-system
---
apiVersion: v1
data:
  traefik-config.yaml: |
    http:
      middlewares:
        headers-default:
          headers:
            sslRedirect: true
            browserXssFilter: true
            contentTypeNosniff: true
            forceSTSHeader: true
            stsIncludeSubdomains: true
            stsPreload: true
            stsSeconds: 15552000
            customFrameOptionsValue: SAMEORIGIN
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: traefik
---
apiVersion: v1
data:
  values.yaml: |-
    ---
    # Options for the main traefik service, where the entrypoints traffic comes from.
    service:
      enabled: true
      type: LoadBalancer
      # Additional service labels (e.g. for filtering Service by custom labels)
    # Whether Role Based Access Control objects like roles and rolebindings should be created
    rbac:
      enabled: true
    # Create an IngressRoute for the dashboard
    # ingressRoute:
    #   dashboard:
    #     enabled: true
    # Configure Traefik static configuration
    # Additional arguments to be passed at Traefik's binary
    # All available options available on https://docs.traefik.io/reference/static-configuration/cli/
    ## Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
    additionalArguments:
      - --providers.file.filename=/data/traefik-config.yaml
      - --providers.kubernetesIngress=true
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=milantech.live
      - --entrypoints.websecure.http.tls.domains[0].sans=*.milantech.live
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=staging@milantech.live
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1
      - --certificatesresolvers.cloudflare.acme.storage=/certs/acme.json
    ports:
      web:
        redirectTo: websecure
    env:
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            key: email
            name: cloudflare-api-credentials
      - name: CF_API_KEY
        valueFrom:
          secretKeyRef:
            key: apiKey
            name: cloudflare-api-credentials
    ingressRoute:
      dashboard:
        enabled: false
        annotations:
          kubernetes.io/ingress.class: traefik
    persistence:
      enabled: true
      path: /certs
      size: 128Mi
    volumes:
      - mountPath: /data
        name: traefik-config
        type: configMap
    # Activate Pilot integration
    pilot:
      enabled: true
      token: "ec4d679a-6126-43bb-9f91-2a3959940418"
kind: ConfigMap
metadata:
  name: traefik-values-c7mb6m5657
  namespace: traefik
---
apiVersion: v1
data:
  values.yaml: |-
    ---
    # Default values for vault-operator.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # The namespace where the operator watches for vault CRD objects, if not defined
    # all namespaces are watched
    watchNamespace: ""
    syncPeriod: "1m"

    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

    terminationGracePeriodSeconds: 10

    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1

    etcd-operator:
      enabled: false
      etcdOperator:
        commandArgs:
          cluster-wide: true
          create-crd: false


    controller:
      electionID: vault-ingress-controller-leader
      ingressClass: nginx-vault
      extraArgs:
        enable-ssl-passthrough:
      publishService:
        enabled: true
      scope:
        enabled: true
      replicaCount: 2
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: release
                operator: In
                values: ["vault-ingress"]
            topologyKey: kubernetes.io/hostname
kind: ConfigMap
metadata:
  name: operator-values-4c5k6829b9
  namespace: vault-system
---
apiVersion: v1
data:
  values.yaml: |-
    ---
    # Default values for vault-secrets-webhook.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 2

    debug: true
      # use extra names if you want use the webhook via an ingress or a loadbalancer
kind: ConfigMap
metadata:
  name: webhook-values-6bm4ck8gb9
  namespace: vault-system
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-credentials
  namespace: traefik
stringData:
  apiKey: aN9wn4FdNwzk8ibQsaV9dPI6jy8Xazz8nYfL79Li
  email: jtmilan@gmail.com
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Path: /Users/dk/workspace/k14s-go/src/github.com/vmware-tanzu/carvel-kapp-controller
          Type: local
        - Dirty: false
          RemoteURL: git@github.com:k14s/kapp-controller
          SHA: 05d59b42423648c87927fd59a4e555d750067eba
          Type: git
        URL: index.docker.io/k14s/kapp-controller@sha256:8121296ee187b35c3109b11d747ce3eb2c01fb0386f162c89bab1d264189caf8
  name: kapp-controller
  namespace: kapp
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: kapp-controller
  template:
    metadata:
      labels:
        app: kapp-controller
    spec:
      containers:
      - args: []
        env:
        - name: KAPPCTRL_MEM_TMP_DIR
          value: /etc/kappctrl-mem-tmp
        image: index.docker.io/k14s/kapp-controller@sha256:8121296ee187b35c3109b11d747ce3eb2c01fb0386f162c89bab1d264189caf8
        name: kapp-controller
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
        securityContext:
          runAsGroup: 2000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/kappctrl-mem-tmp
          name: template-fs
      securityContext:
        fsGroup: 3000
      serviceAccount: kapp-controller-sa
      volumes:
      - emptyDir:
          medium: Memory
        name: template-fs
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: certmanager
spec:
  chart:
    spec:
      chart: cert-manager
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: infra-system
      version: ~>v1.0.0
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: cert-manager
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: certmanager-config-values-8g9c724k4m
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kubeview
  namespace: kubeview
spec:
  chart:
    spec:
      chart: kubeview
      sourceRef:
        kind: HelmRepository
        name: kubeview
        namespace: infra-system
      version: ^0.1.19
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: kubeview
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: kubeview-config-values-g6m46t6cck
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: metallb
  namespace: metallb-system
spec:
  chart:
    spec:
      chart: metallb
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: infra-system
      version: ^0.9.5
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: metallb
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: operator-values
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: infra-system
      version: ~>9.14.1
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: traefik
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: traefik-values-c7mb6m5657
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault-operator
  namespace: vault-system
spec:
  chart:
    spec:
      chart: vault-operator
      sourceRef:
        kind: HelmRepository
        name: banzaicloud-stable
        namespace: infra-system
      version: '>1.0.0'
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: vault-operator
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: operator-values-4c5k6829b9
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault-secrets-webhook
  namespace: vault-system
spec:
  chart:
    spec:
      chart: vault-secrets-webhook
      sourceRef:
        kind: HelmRepository
        name: banzaicloud-stable
        namespace: infra-system
      version: '>1.0.0'
  install:
    remediation:
      retries: 3
  interval: 1m0s
  releaseName: vault-secrets-webhook
  values:
    replicaCount: 1
  valuesFrom:
  - kind: ConfigMap
    name: webhook-values-6bm4ck8gb9
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: banzaicloud-stable
  namespace: infra-system
spec:
  interval: 30m
  url: https://kubernetes-charts.banzaicloud.com
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: bitnami
  namespace: infra-system
spec:
  interval: 30m
  url: https://charts.bitnami.com/bitnami
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: jetstack
  namespace: infra-system
spec:
  interval: 30m
  url: https://charts.jetstack.io
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: kubeview
  namespace: infra-system
spec:
  interval: 30m
  url: https://benc-uk.github.io/kubeview/charts
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: traefik
  namespace: infra-system
spec:
  interval: 30m
  url: https://helm.traefik.io/traefik
